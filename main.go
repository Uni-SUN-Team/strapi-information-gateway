package main

import (
	"os"
	"unisun/api/strapi-information-gateway/config"
	"unisun/api/strapi-information-gateway/controller"
	"unisun/api/strapi-information-gateway/route"

	"github.com/gin-gonic/gin"
	ginSwagger "github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"

	"unisun/api/strapi-information-gateway/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title 				STRAPI INFORMATION GATEWAY API
// @version 			1.0
// @description 		This is a server celler to strapi server.
// @termsOfService 		http://swagger.io/terms/

// @contact.name 		API Support
// @contact.url 		http://www.swagger.io/support
// @contact.email 		support@swagger.io

// @license.name 		Apache 2.0
// @license.url 		http://www.apache.org/licenses/LICENSE-2.0.html

// @schemes https http

// @host      api.unisun.dynu.com
// @BasePath  /strapi-information-gateway/api

// @securityDefinitions.apikey  ApiKeyAuth
// @in                          header
// @name                        Authorization
func main() {
	// programmatically set swagger info
	docs.SwaggerInfo.Title = "Swagger Example API"
	docs.SwaggerInfo.Description = "This is a sample server Petstore server."
	docs.SwaggerInfo.Version = "1.0"
	docs.SwaggerInfo.Host = "petstore.swagger.io"
	docs.SwaggerInfo.BasePath = "/v2"
	docs.SwaggerInfo.Schemes = []string{"http", "https"}

	if os.Getenv("NODE") != "production" {
		config.ConfigENV()
	}
	r := gin.Default()
	r.GET("/healcheck", controller.HealthCheckHandler)
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	g := r.Group(os.Getenv("CONTEXT_PATH") + "/api")
	{
		route.Services(g)
	}
	port := os.Getenv("PORT")
	if port == "" {
		r.Run(":8080")
	} else {
		r.Run(":" + port)
	}
}
